<?xml version="1.0"?> 
<document url="http://openejb.sf.net/tomcat-setup-win.xml">
  <properties>
    <title>Setting up Tomcat with OpenEJB On Window's 2000</title>
  </properties>
  <body>
  <sideimg src="images/diagram-tomcat-adapter.gif" width="240" height="500"/>

<section title="Notes" ref-id="intro">
<p>
This is a rough draft of how to set up Tomcat with OpenEJB on Window's 2000.
These are the minimum steps for integrating OpenEJB into Tomcat. The commands 
in this document are specifically for a Window's DOS prompt and Window's environment.
</p>

<p>
There isn't a whole lot of information on what is going on behind 
the scenes.  So, I encourage *anyone* to feel completely welcome (perhaps 
obligated) to add to this document.  
</p>
</section>

<section title="Before we start" ref-id="intro">
<p>
We always tell users to send us info on their OS and what version of 
OpenEJB, Java, or any other programs they are using when they submit 
support requests.  So, I guess it's only fair I do the same.  
</p>

<p>
Here is some 
information about my setup </p>

<p>
Here's the version of Window's and Java that I'm using:
<code-block>
Microsoft Windows 2000 [Version 5.00.2195]
(C) Copyright 1985-2000 Microsoft Corp.
<br/>
C:\>java -version
java version "1.4.1-rc"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1-rc-b19)
Java HotSpot(TM) Client VM (build 1.4.1-rc-b19, mixed mode)
</code-block>
</p>
</section>

<section title="Installing Everything" ref-id="intro">
<section title="Install Tomcat" ref-id="download.tomcat">
<p>
If you don't already have Tomcat on your machine, download the 
Tomcat version of your choice from Apache.
</p>
<p>
<a href="http://jakarta.apache.org/builds/jakarta-tomcat-4.0/release/v4.1.12/bin/" target="_blank">
http://jakarta.apache.org/builds/jakarta-tomcat-4.0/release/v4.1.12/bin/</a><br/>
<br/>
If you have version 1.4.x of the Java 2 SDK you could download:
<b>jakarta-tomcat-4.1.12-LE-jdk14.exe</b> - which is a lighter version for 1.4.x
and makes use of the libraries that version 1.4.x has.  
Otherwise download <b>jakarta-tomcat-4.1.12.exe</b> which has the libraries that all 
versions below 1.4.x are missing.
</p>
<p>
Install Tomcat
</p>
<p>
Go to the directory you downloaded and double click jakarta-tomcat-xxx.exe.  An install
shield will pop up and ask you for several options.  You may wish to click the check box that
installs Tomcat as an NT service.<br/>
</p>
<p>
<img src="images/tomcat_windows_nt_service.jpg" width="426" height="288" border="0" alt=""/>
</p>
<p>
Once Tomcat is finished installing, it will automatically start up and you can test it by
visiting this link: <a href="http://localhost:8080" target="_blank">http://localhost:8080</a>.  If there are
any problems, consult the Tomcat documentation on their website.
</p>
</section>

<section title="Install OpenEJB" ref-id="download.openejb">
<p>
You need OpenEJB 0.9.0 or higher, any older versions of OpenEJB will not 
work.  You can get that here: <a href="http://openejb.sf.net/download.html" target="_blank">
http://openejb.sf.net/download.html</a> - download the zip version of OpenEJB.  If you do not
have a zip utility, you can get WinZip here: 
<a href="http://download.com.com/3000-2250-10161502.html" target="_blank">
http://download.com.com/3000-2250-10161502.html</a>
</p>
<p>
Unpack OpenEJB 
</p>
<p>
Open your zip utility and unpack OpenEJB into the C:\ folder, or one that makes sense to you.
For our examples, we'll unpack it into c:\openejb-0.9.0
</p>
</section>

<section title="Hook them together" ref-id="download.openejb">
<p>
 Go to the Tomcat Dir.  In our case it should be:
 <b>C:\Program Files\Apache Group\Tomcat 4.1</b>
</p>

<p>
Pass the OPENEJB_HOME dir into Tomcat
using the CATALINA_OPTS environment variable
</p>    

<p>
In order to do this, we'll need to add CATALINA_OPTS to our environment variables.
To do this, go to your desk top and right-click on my computer and choose Properties.
Click on the Advanced tab and click Environment Variables.

</p>

<p>
<img src="images/tomcat_windows_env_variables.jpg" width="410" height="461" border="0" alt=""/>
</p>

<p>
Now, we'll want to add a <b>system variable</b> called <code-block>CATALINA_OPTS</code-block>
and add the following line as the value:<br/>
<code-block>-Dopenejb.home=C:\openejb-0.9.0</code-block>
</p>

<p>
<img src="images/tomcat_windows_env_variables2.jpg" width="384" height="423" border="0" alt=""/>
</p>

<p>
Then add the information:
</p>

<p>
<img src="images/tomcat_windows_env_variables3.jpg" width="347" height="140" border="0" alt=""/>
</p>

<p>
Click Ok, Ok, and Ok.
</p>

<p>
<note>
If you look in web.xml, in webapps\openejb_loader-0.9.0\WEB-INF, there is an init-param node called 
openejb.home.  You may set this value to your OpenEJB home directory instead of setting CATALINA_OPTS
in the environment variables.  This node is commented out and contains instructions on how to set it.
<br/><br/>
Some versions of Tomcat use JAVA_OPTS instead of CATALINA_OPTS for setting environment variables.  
Check the documentation in your version of Tomcat for more details.
</note>
</p>

<p>
Add the OpenEJB Loader to Tomcat
</p>    

<p>
We'll want to copy <b>openejb_loader-0.9.0.war</b> from the OpenEJB dist directory
to the Tomcat webapps directory.
</p>

<p>
<note>
If you add openejb_loader-0.9.0.war to the webapps directory while Tomcat is running, it
may automatically unpack the file and create a openejb_loader-0.9.0 folder.  You won't need
to restart Tomcat for it to be installed.  This may or may not be turned on in the
server.xml file that comes with Tomcat.
</note>
</p>

<img src="images/tomcat_windows_dist_dir.jpg" width="552" height="381" border="0" alt=""/>
<img src="images/tomcat_windows_webapps_dir.jpg" width="552" height="381" border="0" alt=""/>

<p>
 At this point, you're actually finished.
 All the libraries you need are in place.
 Your servlets should use the following
 InitialContextFactory when creating
 an InitialContext to lookup beans
</p>

<p>
<code>org.openejb.client.LocalInitialContextFactory</code>
</p>

<p>
The openejb.home is taken care of for us 
with the CATALINA_OPTS variable, so no other
JNDI options are needed to get an
InitialContext from OpenEJB
</p>
</section>
</section>

<section title="Example Servlet" ref-id="example">
<p>
You can use the OpenEJB Hello World as an
example EJB to test things out. You won't
need to do anything differently.  Deploy
the myHelloEjb.jar just as described.
</p>

<p>
<a href="http://openejb.sourceforge.net/hello-world.html" target="_blank">
http://openejb.sourceforge.net/hello-world.html
</a>
</p>

<p>
Once deployed, the myHelloEjb.jar should be in the beans directory.
</p>

<p>
<code>
C:\openejb-0.9.0\beans\myHelloEjb.jar
</code>
</p>

<p>
You can use the HelloOpenEJB servlet 
below as an example of a
servlet that looks up beans from OpenEJB.
</p>

<p>
It uses the HelloBean created in the 
OpenEJB Hello World document, so you'll
need to run through that first.
You can put the servlet in the following 
webapps directory
</p>    

<p>
<code>
C:\Program Files\Apache Group\Tomcat 4.1\webapps\examples\WEB-INF\classes
</code>
</p>
<p>
<file name="HelloOpenEJB.java"><![CDATA[
import java.io.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.naming.*;
import javax.rmi.PortableRemoteObject;

import org.acme.*;

public class HelloOpenEJB extends HttpServlet {

    String factory = "org.openejb.client.LocalInitialContextFactory";

    public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws IOException, ServletException {
    PrintWriter out = response.getWriter();
    try{
        
        Properties p = new Properties();
        
        p.put(Context.INITIAL_CONTEXT_FACTORY, factory );
        InitialContext ctx = new InitialContext( p );

        //Lookup the bean using it's deployment id
        Object obj = ctx.lookup("/Hello");

        HelloHome ejbHome = (HelloHome) 
                             PortableRemoteObject.narrow(obj, HelloHome.class);

        //Use the HelloHome to create a HelloObject
        HelloObject ejbObject = ejbHome.create();

        //The part we've all been wainting for...

        out.println("<html>");
        out.println("<body>");
        out.println("<head>");
        out.println("<title>Hello World!</title>");
        out.println("</head>");
        out.println("<body>");
        out.println("<h1>"+ ejbObject.sayHello() +"</h1>");
        out.println("</body>");
        out.println("</html>");
        } catch (Exception e){
            response.setContentType("text/plain");
            e.printStackTrace(out);
        }

    }
}]]>
</file>
</p>

<p>
Now, pop open your browser and go to the
following URL.
</p>

<p>
<code>
<a href="http://localhost:8080/examples/servlet/HelloOpenEJB" target="_blank">
http://localhost:8080/examples/servlet/HelloOpenEJB</a>
</code>
</p>

<p>
Should say "Hello World!!!" on the screen
</p>
</section>
<section title="What if it Didn't Work?" ref-id="didnotwork">
<p>
1. Try re-starting Tomcat. The war file that was copied or the environment
variable that we set may not have gotten picked up by Tomcat.<br/>
2. Make sure the CATALINA_OPTS variable is properly set or the openejb.home
parameter in the web.xml file.<br/>
3. Check C:\Program Files\Apache Group\Tomcat 4.1 to see if there is
an openejb.log file.<br/>
4. Send an email to the email list <a href="mailto:openejb-user@lists.sourceforge.net">
openejb-user@lists.sourceforge.net</a> and give a thorough explain the problem.
</p>
</section>

</body>
</document>
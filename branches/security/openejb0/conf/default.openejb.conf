<openejb>

<Container id="Default CMP Container" ctype="CMP_ENTITY">
#
#  The default size of the method ready bean pools. 
#  Every bean class gets its own pool of this size.
#

    PoolSize 100

#  The name of the database.xml file that is used for global or 
#  container managed transactions.  This will be used when the 
#  TransactionManager is managing the transaction, such as when 
#  the tx attribute is Supports (client has tx), RequiresNew, 
#  Required or Manditory.
#  
#  Specifies the configuration for obtaining database connections
#  and the mapping.xml schema which describes how beans map to 
#  the database.
#

    Global_TX_Database  conf/default.cmp_global_tx_database.xml
    
#  The name of the database.xml file that is used for local or 
#  unspecified transaction contexts.  This will be used when 
#  the TransactionManager is not managing the transaction, such 
#  as when the tx attribute is Supports (no client tx), 
#  NotSupported, or Never.
#  
#  Specifies the configuration for obtaining database connections 
#  and the mapping.xml schema which describes how beans map to 
#  the database.
#

    Local_TX_Database   conf/default.cmp_local_tx_database.xml

</Container>



<!--
<Container id="InstantDB CMP Container" ctype="CMP_ENTITY">
    # InstantDB example
    Global_TX_Database  conf/instantdb.cmp.global-database.xml
    Local_TX_Database   conf/instantdb.cmp.local-database.xml
</Container>
-->



<!--   
<Container id="PostgreSQL CMP Container" ctype="CMP_ENTITY">
    # PostgreSQL example
    Global_TX_Database  conf/postgresql.cmp.global-database.xml
    Local_TX_Database   conf/postgresql.cmp.local-database.xml
</Container>
-->



<Container id="Default BMP Container" ctype="BMP_ENTITY">
#  --------------------------------------------------------------
#  The Default BMP Container has no customizable properties to  
#  override.                                             
#  --------------------------------------------------------------
</Container>



<Container id="Default Stateful Container" ctype="STATEFUL">
#  The passivator is responsible for writing beans to disk 
#  at passivation time. Different passivators can be used 
#  by setting this property to the fully qualified class name
#  of the PassivationStrategy implementation. The passivator
#  is not responsible for invoking any callbacks or other 
#  processing, its only responsibly is to write the bean state
#  to disk.
#
#  Known implementations:
#     org.openejb.core.stateful.RAFPassivater
#     org.openejb.core.stateful.SimplePassivater

    Passivator   org.openejb.core.stateful.SimplePassivater
    
#  Specifies the time to wait between invocations. This 
#  value is measured in minutes.  A value of 5 would 
#  result in a time-out of 5 minutes between invocations.

    TimeOut  20

#  Specifies the size of the bean pools for this 
#  stateful SessionBean container.

    PoolSize  100

#  Property name that specifies the number of instances
#  to passivate at one time when doing bulk passivation.
#  Must be less than the PoolSize.

    BulkPassivate  50

</Container>    



<Container id="Default Stateless Container" ctype="STATELESS">
#  Specifies the whether or not to this stateless 
#  SessionBean container should use a strict pooling algorithm.
#  true or false

    StrictPooling  true

</Container>

<Connector id="Default JDBC Database" />

<!-- 
<Connector id="InstantDB Database">            
    #  InstantDB example
    #
    #  This connector does work as is, the drivers are shipped
    #  with every OpenEJB distribution and should be in the 
    #  OPENEJB_HOME/lib directory.
    #
    #  Information on InstantDB can be found at:
    #  http://openejb.sf.net/InstantDB/docs/
    
    JdbcDriver   org.enhydra.instantdb.jdbc.idbDriver
    JdbcUrl      jdbc:idb:conf/default.idb_database.conf
    UserName     Admin
    Password     pass
</Connector>
-->

<!-- 
<Connector id="MySQL Database">            
    #  MySQL example
    #
    #  This connector will not work until you download the driver at:
    #  http://www.mysql.com/downloads/api-jdbc-stable.html
    
    JdbcDriver  com.mysql.jdbc.Driver
    JdbcUrl     jdbc:mysql://localhost/test
    UserName    test
</Connector>
-->

<!-- 
<Connector id="Oracle Database">            
    #  Oracle example
    #
    #  This connector will not work until you download the driver at:
    #  http://otn.oracle.com/software/tech/java/sqlj_jdbc/content.html
    JdbcDriver  com.mysql.jdbc.Driver
    JdbcUrl     jdbc:oracle:thin:@localhost:1521:orcl
    UserName    scott
    Password    tiger
</Connector>
-->

<!-- 
<Connector id="PostgreSQL Database">            
    #  PostgreSQL example
    #
    #  This connector will not work until you download the driver at:
    #  http://jdbc.postgresql.org/download.html
    JdbcDriver   org.postgresql.Driver
    JdbcUrl      jdbc:postgresql://localhost/test
    UserName     postgres
    Password     pass
</Connector>
-->

<!--
#  
#  The Security Service
#
#  Must be defined in the service-jar.xml of the jar
#  
#  Attributes:
#
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
# 
<SecurityService
	id="org.openejb.security#OpenEJB Security Service"
	jar="o:/dev/openejb_sec/dist/openejb_security-0.9.0.jar"/>
-->

<!--
#
#  A registry listing of all the jars
#  deployed with OpenEJB.
#
#  Jars in this path must contain an 
#  openejb-jar.xml in the jar to be loaded
#  
#  You can create this file yourself or
#  use the deploy tool.
-->
<Deployments dir="dist/beans/" />
<Deployments dir="beans/" />

</openejb>

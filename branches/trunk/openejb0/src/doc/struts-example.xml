<?xml version="1.0"?>
<!-- $Id$ -->
<document url="http://www.openejb.org/struts-example.xml">
  <properties>
    <title>OpenEJB/Tomcat/Struts Example</title>
    <sub-title>A basic example using OpenEJB, Tomcat and Struts</sub-title>
  </properties>
<body>

<section title="Abstract">
  <p>
  Since Struts is a such a popular J2EE web framework, I decided to create a simple
  example using OpenEJB, Struts and Tomcat.  I hope that you find this example to be
  helpful when using this set up.
  <br/><br/>
  Here are the versions of the components that I'm using:<br/><br/>
  OpenEJB 0.9.2<br/>
  Tomcat 4.1.24<br/>
  Struts 1.1<br/>
  MySQL  4.0.13<br/>
  MySQL Connector/J 3.0.8
  <br/><br/>
  This example may work with other versions of the above listed, but I have not tested them.
  </p>
</section>

<section title="Before Starting">
  <p>
  You will need to complete the <a href="cmp_entity_postgresql.html">CMP Example</a>
  before starting this example.  You will also need to download and install
  <a href="http://jakarta.apache.org/site/binindex.cgi" target="_blank">Tomcat</a>
  and <a href="http://jakarta.apache.org/site/binindex.cgi" target="_blank">Struts</a>.
  You will need to complete the <a href="tomcat.html">tomcat installation</a>
  as well as installing struts.
  <br/><br/>
  You will also need to add the following methods to the EmployeeObject interface and
  to the EmployeeBean class<br/><br/>
  <code>public String getFirstname()
public String getLastname()
public String getEmail()</code>
  <br/>
  Each of these methods will return the corresponding field.
  </p>
</section>

<section title="Create Required Files and Directories">
  <p>
  Create a new webapp in your TOMCAT_HOME/webapps directory with
  the following directory structure
  <br/><br/>
  <command>OpenEJBStrutsExample/WEB-INF/classes</command><br/>
  <command>OpenEJBStrutsExample/WEB-INF/lib</command>
  <br/><br/>
  There are some required files that will need to be copied over to your TOMCAT_HOME
  directory from the struts-example webapp.  These files will be found in the WEB-INF
  directory of the struts-example webapp and will need to be moved into the WEB-INF
  directory of your webapp:<br/><br/>
  struts-bean.tld<br/>
  struts-html.tld<br/>
  struts-logic.tld<br/><br/>

  The following files need to be copied into the lib directory of your webapp:
  <br/><br/>
  commons-beanutils.jar<br/>
  commons-collections.jar<br/>
  commons-digester.jar<br/>
  commons-fileupload.jar<br/>
  commons-lang.jar<br/>
  commons-logging.jar<br/>
  commons-validator.jar<br/>
  jakarta-oro.jar<br/>
  struts.jar<br/><br/>
  </p>
</section>

<section title="Create the web.xml File">
<p>This file takes care of setting up the mapping.</p>
<file name="C:\jakarta-tomcat-4.1.24\webapps\OpenEJBStrutsExample\WEB-INF\web.xml"><![CDATA[
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
   PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN"
   "http://java.sun.com/j2ee/dtds/web-app_2_2.dtd">

<web-app>
  <display-name>OpenEJB Struts Example</display-name>

  <!-- Action Servlet Configuration -->
  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
    <init-param>
      <param-name>config</param-name>
      <param-value>/WEB-INF/struts-config.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- Action Servlet Mapping -->
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>


  <!-- The Welcome File List -->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <!-- Struts Tag Library Descriptors -->
  <taglib>
    <taglib-uri>/WEB-INF/struts-bean.tld</taglib-uri>
    <taglib-location>/WEB-INF/struts-bean.tld</taglib-location>
  </taglib>

  <taglib>
    <taglib-uri>/WEB-INF/struts-html.tld</taglib-uri>
    <taglib-location>/WEB-INF/struts-html.tld</taglib-location>
  </taglib>

  <taglib>
    <taglib-uri>/WEB-INF/struts-logic.tld</taglib-uri>
    <taglib-location>/WEB-INF/struts-logic.tld</taglib-location>
  </taglib>

</web-app>]]></file>
</section>
<br/>
<section title="Create the struts-config.xml File">
<p>This is the main configuration file for Struts.</p>
<file name="C:\jakarta-tomcat-4.1.24\webapps\OpenEJBStrutsExample\WEB-INF\struts-config.xml"><![CDATA[
<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE struts-config PUBLIC
          "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">

<!--
     This is the Struts configuration file for the example application,
     using the proposed new syntax.
-->
<struts-config>
  <!-- ========== Form Bean Definitions =================================== -->
  <form-beans>
    <!-- employee form bean -->
    <form-bean      name="employeeForm"
                    type="org.acme.form.EmployeeForm"/>
  </form-beans>

  <!-- ========== Global Forward Definitions ============================== -->
  <!--
  <global-forwards>
     <forward name="failure" path="/failure.jsp"/>
  </global-forwards>
  -->

  <!-- ========== Action Mapping Definitions ============================== -->
  <action-mappings>
    <!-- shows the results for the employee  -->
    <action    path="/showResults"
               type="org.acme.action.EmployeeAction"
               name="employeeForm"
           validate="false">
      <forward name="success" path="/showResults.jsp"/>
    </action>
  </action-mappings>

  <!-- ========== Controller Configuration ================================ -->
  <!-- The "input" parameter on "action" elements is the name of a
         local or global "forward" rather than a module-relative path -->
  <controller>
    <set-property property="inputForward" value="true"/>
  </controller>

  <!-- ========== Message Resources Definitions =========================== -->
  <message-resources
    parameter="org.apache.struts.webapp.example.ApplicationResources"/>

  <message-resources
    parameter="org.apache.struts.webapp.example.AlternateApplicationResources"
    key="alternate">
  </message-resources>

  <!-- ========== Plug Ins Configuration ================================== -->
  <plug-in className="org.apache.struts.plugins.ModuleConfigVerifier"/>
</struts-config>]]></file>
</section>

<section title="Create the Action and Form Classes">
<p>
In this next section we will create an action and a form class
to be used by the following jsp files
</p>

<p>This is the main action class which does the most of the work.</p>
<file name="C:\jakarta-tomcat-4.1.24\webapps\OpenEJBStrutsExample\WEB-INF\classes\org\acme\action\EmployeeAction.java">
package org.acme.action;

import java.util.Properties;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.rmi.PortableRemoteObject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.acme.employee.EmployeeHome;
import org.acme.employee.EmployeeObject;
import org.acme.form.EmployeeForm;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public class EmployeeAction extends Action {

   public ActionForward execute(
      ActionMapping mapping,
      ActionForm form,
      HttpServletRequest request,
      HttpServletResponse response)
      throws Exception {

      //first we're going to get the form paramete
      EmployeeForm employeeForm = (EmployeeForm) form;

      //set up the context
      Properties properties = new Properties();
      properties.put(Context.INITIAL_CONTEXT_FACTORY,
         "org.openejb.client.LocalInitialContextFactory");
      Context context = new InitialContext(properties);

      //look up the bean
      Object object = context.lookup("/EmployeeBean");
      EmployeeHome employeeHome =
         (EmployeeHome) PortableRemoteObject.narrow(object, EmployeeHome.class);

      //find the object
      EmployeeObject employeeObject =
         employeeHome.findByPrimaryKey(new Integer(employeeForm.getId()));

      //set the values on the form
      employeeForm.setFirstName(employeeObject.getFirstname());
      employeeForm.setLastName(employeeObject.getLastname());
      employeeForm.setEmail(employeeObject.getEmail());

      return mapping.findForward("success");
   }
}
</file>

<p>The form class holds the data to be displayed on the results page.</p>
<file name="C:\jakarta-tomcat-4.1.24\webapps\OpenEJBStrutsExample\WEB-INF\classes\org\acme\form\EmployeeForm.java">
package org.acme.form;

import org.apache.struts.action.ActionForm;

public class EmployeeForm extends ActionForm {
   private int id;
   private String firstName;
   private String lastName;
   private String email;

   public String getEmail() {
      return this.email;
   }

   public String getFirstName() {
      return this.firstName;
   }

   public int getId() {
      return this.id;
   }

   public String getLastName() {
      return this.lastName;
   }

   public void setEmail(String email) {
      this.email = email;
   }

   public void setFirstName(String firstName) {
      this.firstName = firstName;
   }

   public void setId(int id) {
      this.id = id;
   }

   public void setLastName(String lastName) {
      this.lastName = lastName;
   }
}
</file>
</section>

<section title="Comple the Action and Form Classes">
<command>
javac -classpath C:\jakarta-tomcat-4.1.24\webapps\OpenEJBStrutsExample\WEB-INF\lib\struts.jar;
C:\jakarta-tomcat-4.1.24\common\lib\servlet.jar
org.acme.action.*.java
</command><br/><br/>
<command>
javac -classpath C:\jakarta-tomcat-4.1.24\webapps\OpenEJBStrutsExample\WEB-INF\lib\struts.jar;
C:\jakarta-tomcat-4.1.24\common\lib\servlet.jar
org.acme.form.*.java
</command>
</section>

<section title="Create the index.jsp File">
<p>
This file will contain a simple form where you can enter an employee
id. This employee id will be used to look up the record in the database.
</p>
<file name="C:\jakarta-tomcat-4.1.24\webapps\OpenEJBStrutsExample\index.jsp"><![CDATA[
<html>
<head>
   <title>Example</title>
</head>
<body>
   <font size="2">
   Enter an employee id to look up a record in the database and display the results
   on the next page.
   </font>
   <form action="showResults.do" method="post">
   <table cellpadding="1" cellspacing="1" border="0">
   <tr>
      <td><font size="2">Employee Id</font></td>
      <td><input type="text" name="id" size="5"></td>
   </tr>
   <tr>
      <td colspan="2">&nbsp;</td>
   </tr>
   <tr>
      <td colspan="2"><input type="submit" name="submitEmployee" value="Continue"></td>
   </tr>
   </table>
   </form>
</body>
</html>
]]></file>
</section>

<section title="Create the showResults.jsp File">
<p>
This file contains the results of the look up.
</p>
<file name="C:\jakarta-tomcat-4.1.24\webapps\OpenEJBStrutsExample\showResults.jsp"><![CDATA[
<%@ taglib uri="/WEB-INF/struts-bean.tld" prefix="bean" %>
<html>
<head>
   <title>Example</title>
</head>
<body>
   <font size="2">here are your results:</font>
   <table cellpadding="1" cellspacing="1" border="0">
   <tr>
      <td><font size="2">Employee Id:</font></td>
      <td><font size="2"><bean:write name="employeeForm" property="id"/></font></td>
   </tr>
   <tr>
      <td><font size="2">First Name:</font></td>
      <td><font size="2"><bean:write name="employeeForm" property="firstName"/></font></td>
   </tr>
   <tr>
      <td><font size="2">Last Name:</font></td>
      <td><font size="2"><bean:write name="employeeForm" property="lastName"/></font></td>
   </tr>
   <tr>
      <td><font size="2">Email:</font></td>
      <td><font size="2"><bean:write name="employeeForm" property="email"/></font></td>
   </tr>
   </table>
</body>
</html>
]]></file>
</section>

<section title="Run It!">
<p>
Start up Tomcat and browse to your webapp:
<a href="http://localhost:8080/OpenEJBStrutsExample">http://localhost:8080/OpenEJBStrutsExample</a>
</p>
</section>

<section title="What if it didn't work?">
<p>
<ol>
<li>Make sure you have your EJB in the right location</li>
<li>Check to see if all the tld files and jar files were copied over</li>
<li>Make sure your OpenEJB configuration is set up properly</li>
</ol>
</p>
</section>

</body>
</document>
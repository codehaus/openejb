<project name="OpenEJB web site" default="docs" basedir=".">
  <!-- 
  		Contributions by:
  			Daniel S. Haischt <sirabyss@gmx.net>
  	-->

  <!-- Give user a chance to override without editing this file
       (and without typing -D each time they invoke a target) -->

  <!-- Allow any user specific values to override the defaults -->
  <property file="${user.home}/build.properties" />

  <!-- Set default values for the build -->
  <property file="src/build.properties" />

  <property name="build.src" value="${build.dir}/src"/>
  <property name="build.dest" value="${build.dir}/classes"/>
  <property name="src.java.dir" value="${src.dir}"/>
  <property name="src.doc.dir" value="${docs.src}"/>
  <property name="dest.doc.dir" value="${docs.dest}"/>
  <property name="dest.javadoc.dir" value="${javadoc.destdir}"/>
  <property name="htdocs.dir" value="/home/groups/o/op/openejb/htdocs/"/>

  <!-- ================================================================== -->
  <!-- Help on usage                                                      -->
  <!-- ================================================================== -->
  
  <target name="usage">
    <echo message="use -projecthelp to see the available targets"/>
  </target>
  
  <target name="targets">
    <echo message="use -projecthelp to see the available targets"/>
  </target>

  <!-- ================================================================== -->
  <!-- Prepares the build directory                                       -->
  <!--                                                                    -->
  <!-- You have to include the dependency 'check.jrefactory' if you       -->
  <!-- wanna use the pretty printer.                                      -->
  <!-- ================================================================== -->
  
  <target name="prepare"
          description="--> prepares the build environment">
          
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>
    <mkdir dir="${dest.doc.dir}"/>
    <mkdir dir="${dest.javadoc.dir}"/>
          
  </target>
  
  <!-- ================================================================== -->
  <!-- Creates the OpenEJB documentation                                  -->
  <!-- ================================================================== -->
  
  <target name="tracker"
          description="--> prepares the build environment">
          
     <java classname="davidblevins.Tracker"
           output="${docs.src}/tracker.xml">
       <classpath>
         <pathelement location="lib/dblevins-tools.jar"/>
       </classpath>
     </java>
          
  </target>
  
  <!-- ================================================================== -->
  <!-- Creates the OpenEJB documentation                                  -->
  <!-- ================================================================== -->
  
  <target name="docs"
          depends="prepare"
          description="--> generates documentation from XML files via XSLT">

    <copy todir="${docs.dest}/html/spec">
        <fileset dir="${docs.src}/spec" />
    </copy>
    
    <style basedir="${docs.src}" 
        destdir="${docs.dest}/html" 
        style="src/doc/style/tracker.xsl"
        includes="**/tracker.xml" 
        processor="trax">           
      
    </style>
    
    <style basedir="${docs.src}" 
        destdir="${docs.dest}/html" 
        style="src/doc/style/sysdesign.xsl"
        includes="**/design_*.xml" 
        excludes="style/**,src/doc/faq**,project.xml,CHANGELOG.xml,download.xml,release-plan.xml"
        processor="trax">           
      
    </style>
    
	<style basedir="${docs.src}" 
		destdir="${docs.dest}/html" 
		style="src/doc/style/faq.xsl"
		includes="**/faq*.xml" 
		excludes="style/**,project.xml,CHANGELOG.xml,download.xml,release-plan.xml"
		processor="trax">           

	</style>

    <style basedir="${docs.src}" 
        destdir="${docs.dest}/html" 
        style="src/doc/style/website.xsl"
        includes="**/**.xml" 
        excludes="style/**,src/doc/design_**,src/doc/faq**,project.xml,CHANGELOG.xml,download.xml,release-plan.xml,news.xml,tracker.xml"
        processor="trax">           
      
    </style>
    
    <style style="src/doc/style/download.xsl"
        in="${docs.src}/CHANGELOG.xml" 
        out="${docs.dest}/html/download.html" 
        processor="trax">           
      
    </style>
    
    <style style="src/doc/style/release-plan.xsl"
        in="${docs.src}/CHANGELOG.xml" 
        out="${docs.dest}/html/release-plan.html" 
        processor="trax">           
      
    </style>

    <copy todir="${docs.dest}/html/images">
        <fileset dir="${docs.src}/images" />
    </copy>
    <copy todir="${docs.dest}/html/images">
        <fileset dir="${docs.src}/style/images" includes="*.gif"/>
    </copy>
    <copy todir="${docs.dest}/html/">
        <fileset dir="${docs.src}/style" includes="*.css"/>
    </copy>
    <copy todir="${docs.dest}/html">
        <fileset dir="${docs.src}" includes="license.txt,document.dtd,*.pdf,*.java,faq_template.xml"/> 
    </copy> 
    <copy todir="${docs.dest}/html">
        <fileset dir="${docs.src}" includes="*.ppt"/>
    </copy>
  </target>

  <target name="website"
          depends="tracker,docs"
          description="--> generates documentation from XML files via XSLT">
    
    <copy overwrite="true"
      file="${docs.dest}/html/release-0.9.2-status.html" 
      tofile="${docs.dest}/html/release-plan.html"/>

    <move file="${docs.src}/tracker.xml" tofile="${docs.dest}/html/tracker.xml"/>

    <move todir="${htdocs.dir}">
      <fileset dir="${docs.dest}/html"/>
    </move>
  
  </target>
  

  <!-- ================================================================== -->
  <!-- Cleans up the build directory                                      -->
  <!-- ================================================================== -->
  
  <target name="clean"
          description="--> cleans up the build directory">
    <delete dir="${build.dir}"/>
    <delete dir="${dest.doc.dir}"/>
    <delete dir="dist"/>
    <delete dir="${reports.tests.dir}"/>
  </target>
  
</project>

<openejb>

<!--
#  
#  Container
#
#  Must be defined in the service-jar.xml of the jar
#  
#  Attributes:
#
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
#
#  ctype  The bean type this container services
# 
-->
<Container 
    id="Default CMP Container" 
    ctype="CMP_ENTITY" 
    jar="conf/openejb.services.jar">
    
#  --------------------------------------------------------------
#  To override the values in the default implementation, simply 
#  uncomment the respective line and provide a new value.
#  --------------------------------------------------------------
#
#  The default size of the method ready bean pools. 
#  Every bean class gets its own pool of this size.
#
#  Default:
#  PoolSize 100
# 
#  Examples:
#  PoolSize 200
#  PoolSize 50
#  PoolSize 25
    
#  The name of the database.xml file that is used for global or 
#  container managed transactions.  This will be used when the 
#  TransactionManager is managing the transaction, such as when 
#  the tx attribute is Supports (client has tx), RequiresNew, 
#  Required or Manditory.
#  
#  Specifies the configuration for obtaining database connections
#  and the mapping.xml schema which describes how beans map to 
#  the database.
#
#  Default:
#  Global_TX_Database  conf/default.cmp_global_tx_database.xml
#
#  Examples:
#  Global_TX_Database  conf/myGlobalTxDatabase.xml
#  Global_TX_Database  ../path/to/castorGTX-Dbase.xml
#  Global_TX_Database  /any/dir/anyFileName.ext
    
#  The name of the database.xml file that is used for local or 
#  unspecified transaction contexts.  This will be used when 
#  the TransactionManager is not managing the transaction, such 
#  as when the tx attribute is Supports (no client tx), 
#  NotSupported, or Never.
#  
#  Specifies the configuration for obtaining database connections 
#  and the mapping.xml schema which describes how beans map to 
#  the database.
#
#  Default:
#  Local_TX_Database   conf/default.cmp_local_tx_database.xml
#
#  Examples:
#  Local_TX_Database   conf/myLocalTxDatabase.xml
#  Local_TX_Database   ../path/to/castorLTX-Dbase.xml
#  Local_TX_Database   /any/dir/anyFileName.ext

#  Each bean CMP EntityBean deployment has a unique KeyGenerator 
#  that is responsible for two operations:
#      
#      1. Convert the EJB developer defined complex primary keys
#         to Castor JDO Complex objects
#      
#      2. Extract a primary key object from a loaded Entity bean
#         instance.
#  
#  The KeyGenerator creates a new primary key and populates its 
#  fields with the primary key fields of the bean instance.  
#  
#  The KeyGenerators are generated as well.  The CMP Container 
#  will construct and compile a KeyGenerator for each CMP 
#  EntityBean deployed in this container.  The value of 
#  KeyDirectory specifies where the container should put the 
#  generated classes.
#
#  Default:
#  KeyDirectory   keys
#
#  Examples:
#  KeyDirectory   tmp/keys
#  KeyDirectory   ../path/to/mykeys
#  KeyDirectory   C:\openejb\CMPkeys
#  KeyDirectory   /usr/local/bin/openejb/keys

</Container>

<!--
#  
#  Container
#
#  Must be defined in the service-jar.xml of the jar
#  
#  Attributes:
#
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
#
#  ctype  The bean type this container services
# 
-->
<Container 
    id="Default BMP Container" 
    ctype="BMP_ENTITY" 
    jar="conf/openejb.services.jar">
    
#  --------------------------------------------------------------
#  The Default BMP Container has no customizable properties to  
#  override.                                             
#  --------------------------------------------------------------

</Container>


<!--
#  
#  Container
#
#  Must be defined in the service-jar.xml of the jar
#  
#  Attributes:
#
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
#
#  ctype  The bean type this container services
# 
-->
<Container 
    id="Default Stateful Container" 
    ctype="STATEFUL" 
    jar="conf/openejb.services.jar">
    
#  --------------------------------------------------------------
#  To override the values in the default implementation, simply 
#  uncomment the respective line and provide a new value.
#  --------------------------------------------------------------

#  The passivator is responsible for writing beans to disk 
#  at passivation time. Different passivators can be used 
#  by setting this property to the fully qualified class name
#  of the PassivationStrategy implementation. The passivator
#  is not responsible for invoking any callbacks or other 
#  processing, its only responsibly is to write the bean state
#  to disk.
#
#  Known implementations:
#     org.openejb.core.stateful.RAFPassivater
#     org.openejb.core.stateful.SimplePassivater
#    
#  Default:
#  Passivator   org.openejb.core.stateful.SimplePassivater
#
#  Examples:
#  Passivator   org.openejb.core.stateful.RAFPassivater
#  Passivator   com.your.implementation.of.PassivationStrategy
    
#  Specifies the time to wait between invocations. This 
#  value is measured in minutes.  A value of 5 would 
#  result in a time-out of 5 minutes between invocations.
#
#  Default:
#  TimeOut  20
#
#  Examples:
#  TimeOut  5
#  TimeOut  60
#  TimeOut  9999
   
#  Specifies the size of the bean pools for this 
#  stateful SessionBean container.
#
#  Default:
#  PoolSize  100
#
#  Examples:
#  PoolSize  10
#  PoolSize  50
#  PoolSize  200


#  Property name that specifies the number of instances
#  to passivate at one time when doing bulk passivation.
#  Must be less than the PoolSize.
#
#  Default:
#  BulkPassivate  50
#
#  Examples:
#  BulkPassivate  5
#  BulkPassivate  10
#  BulkPassivate  100
    

</Container>    
<!--
#  
#  Container
#
#  Must be defined in the service-jar.xml of the jar
#  
#  Attributes:
#
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
#
#  ctype  The bean type this container services
# 
-->
<Container 
    id="Default Stateless Container" 
    ctype="STATELESS" 
    jar="conf/openejb.services.jar">
#  --------------------------------------------------------------
#  To override the values in the default implementation, simply 
#  uncomment the respective line and provide a new value.
#  --------------------------------------------------------------
#    
#  Specifies the whether or not to this stateless 
#  SessionBean container should use a strict pooling algorithm.
#  true or false
#
#  Default:
#  StrictPooling  true
#  
#  Valid options are:
#  StrictPooling  true
#  StrictPooling  false

</Container>

<!--
#  
#  The Security Service
#
#  Must be defined in the service-jar.xml of the jar
#  
#  Attributes:
#
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
#
#  ctype  The bean type this container services
# 
-->
<SecurityService jar="conf/openejb.services.jar" id="Default Security Service"/>

<!--
#  
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
# 
-->
<TransactionService jar="conf/openejb.services.jar" id="Default Transaction Manager"/>

<!--
#
#  The class for the proxy factory that creates
#  the EJBHomes and EJBObject implementations
#  for the IntraVM Server.
#  
#  Must be defined in the service-jar.xml of the jar
#
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
#
-->
<ProxyFactory jar="conf/openejb.services.jar" id="Default JDK 1.3 ProxyFactory" />


<!--
#
#  Must be defined in the service-jar.xml of the jar
#  
#  jar    The location of the jar that contains the
#         the service-jar.xml and the classes for the
#         service.
#
#  id     The id of the service provider defined in 
#         the service-jar.xml
#
-->
<Connector jar="conf/openejb.services.jar" id="Default JDBC Database">        
    #  --------------------------------------------------------------
    #  To override the values in the default implementation, simply 
    #  uncomment the respective line and provide a new value.
    #  --------------------------------------------------------------
    
    #  Driver class name
    #  
    #  Default:                                
    #  JdbcDriver   org.enhydra.instantdb.jdbc.idbDriver
    #
    #  Example:
    #  JdbcDriver   com.your.jdbc.driver.OracleDriver
    #  JdbcDriver   com.driversRus.jdbc.driver.AnyDatabaseDriver
    
    #  Url for creating connections
    #  
    #  Default:                                
    #  JdbcUrl      jdbc:idb:conf/default.idb_database.conf
    #
    #  Examples:
    #  JdbcUrl      jdbc:oracle:specificrul
    #  JdbcUrl      jdbc:mydb:url_parameters
    
    
    #  Default user name and password
    #  UserName     Admin
    #  Password     pass
    #
    #  Examples:
    #  UserName     rogerrabbit
    #  Password     waltsentme
    #
    #  UserName     alibaba
    #  Password     opensaysme

</Connector>
        
<!--
#
#  A registry listing of all the jars
#  deployed with OpenEJB.
#
#  Must contain an openejb-jar.xml in the jar
#
-->
<Deployments dir="dist/beans/" />
<Deployments dir="beans/" />

</openejb>

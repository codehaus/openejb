<ServiceJar>

  <!--
  #===================================================================#
  #       D E F A U L T    O P E N E J B    S E R V I C E S           #
  #===================================================================#
  #
  #
  #  This file defines all the default configurations of containers,
  #  factories, managers and services that come with OpenEJB.
  #
  #  Can contain numerous configurations of the standard services
  #  making it easy for users to simply name the one they want in
  #  their configuration files.
  #
  #  Over time this will be become a library of default
  #  configurations
  #
  #
  #  The Configuraitions in this file reference the following other
  #  files:
  #
  #  conf/default.cmp_global_tx_database.xml
  #  conf/default.cmp_local_tx_database.xml
  #  conf/default.idb_database.conf
  -->

  <!--
  # ==========================================================
  # Default Container-Managed Persistence EntityBean Container
  # ==========================================================
  -->
  <ServiceProvider id="Default CMP Container"
                   provider-type="Container"
                   constructor="id, transactionManager, securityService, deployments, Global_TX_Database, Local_TX_Database, PoolSize"
                   class-name="org.openejb.alt.containers.castor_cmp11.CastorCMP11_EntityContainer">

    # The default size of the method ready bean pools.
    # Every bean class gets its own pool of this size.

    PoolSize 100

    # The name of the database.xml file that is used for global or
    # container managed transactions. This will be used when the
    # TransactionManager is managing the transaction, such as when
    # the tx attribute is Supports (client has tx), RequiresNew,
    # Required or Manditory.
    #
    # Specifies the configuration for obtaining database connections
    # and the mapping.xml schema which describes how beans map to
    # the database.

    Global_TX_Database conf/default.cmp_global_tx_database.xml

    # The name of the database.xml file that is used for local or
    # unspecified transaction contexts. This will be used when
    # the TransactionManager is not managing the transaction, such
    # as when the tx attribute is Supports (no client tx),
    # NotSupported, or Never.
    #
    # Specifies the configuration for obtaining database connections
    # and the mapping.xml schema which describes how beans map to
    # the database.

    Local_TX_Database conf/default.cmp_local_tx_database.xml

  </ServiceProvider>

  <!--
  # ==========================================================
  # Default Bean-Managed Persistence EntityBean Container
  # ==========================================================
  -->
  <ServiceProvider
          id="Default BMP Container"
          provider-type="Container"
          constructor="id, transactionManager, securityService, deployments, PoolSize"
          class-name="org.openejb.core.entity.EntityContainer">

    # Specifies the size of the bean pools for this
    # bmp entity container.

    PoolSize 10

</ServiceProvider>



  <!--
  # ==========================================================
  # Default Stateless SessinBean Container
  # ==========================================================
  -->
  <ServiceProvider
          id="Default Stateless Container"
          provider-type="Container"
          constructor="id, transactionManager, securityService, deployments, TimeOut, PoolSize, StrictPooling"
          class-name="org.openejb.core.stateless.StatelessContainer">

    # Specifies the time to wait between invocations. This
    # value is measured in milliseconds. A value of 5 would
    # result in a time-out of 5 milliseconds between invocations.
    # A value of zero would mean no timeout.

    TimeOut 0

    # Specifies the size of the bean pools for this
    # stateless SessionBean container.

    PoolSize 10

    # StrictPooling tells the container what to do when the pool
    # reaches it's maximum size and there are incoming requests
    # that need instances.
    #
    # With strict pooling, requests will have to wait for instances
    # to become available. The pool size will never grow beyond the
    # the set PoolSize value.
    #
    # Without strict pooling, the container will create temporary
    # instances to meet demand. The instances will last for just one
    # method invocation and then are removed.

    StrictPooling true


  </ServiceProvider>


  <!--
  # ==========================================================
  # Default Stateful SessinBean Container
  # ==========================================================
  -->
  <ServiceProvider
          id="Default Stateful Container"
          provider-type="Container"
          constructor="id, transactionManager, securityService, deployments, Passivator, TimeOut, PoolSize, BulkPassivate"
          class-name="org.openejb.core.stateful.StatefulContainer">

    # The passivator is responsible for writing beans to disk
    # at passivation time. Different passivators can be used
    # by setting this property to the fully qualified class name
    # of the PassivationStrategy implementation. The passivator
    # is not responsible for invoking any callbacks or other
    # processing, its only responsibly is to write the bean state
    # to disk.
    #
    # Known implementations:
    # org.openejb.core.stateful.RAFPassivater
    # org.openejb.core.stateful.SimplePassivater

    Passivator org.openejb.core.stateful.SimplePassivater

    # Specifies the time to wait between invocations. This
    # value is measured in minutes. A value of 5 would
    # result in a time-out of 5 minutes between invocations.

    TimeOut 20

    # Specifies the size of the bean pools for this
    # stateful SessionBean container.

    PoolSize 100

    # Property name that specifies the number of instances
    # to passivate at one time when doing bulk passivation.

    BulkPassivate 50

  </ServiceProvider>

  <!--
  # ================================================
  # Default Proxy Factory implementation for JDK 1.2
  # ================================================
  -->
  <ServiceProvider
          id="Default JDK 1.2 ProxyFactory"
          provider-type="Proxy"
          class-name="org.openejb.util.proxy.Jdk12ProxyFactory"/>

  <!--
  # ================================================
  # Default Proxy Factory implementation for JDK 1.3
  # ================================================
  -->
  <ServiceProvider
          id="Default JDK 1.3 ProxyFactory"
          provider-type="Proxy"
          class-name="org.openejb.util.proxy.Jdk13ProxyFactory"/>

  <!--
  # ================================================
  # Default Security Service implementation
  # ================================================
  -->
  <ServiceProvider
          id="Default Security Service"
          provider-type="Security"
          class-name="org.openejb.ri.sp.PseudoSecurityService"/>

  <!--
  # ================================================
  # Default Transaction Manager implementation
  # ================================================
  -->
  <ServiceProvider
          id="Default Transaction Manager"
          provider-type="Transaction"
          class-name="org.openejb.ri.sp.PseudoTransactionService"/>

  <!--
  # ================================================
  # Default JCA ManagedConnectionFactory for JDBC
  # ================================================
  -->
  <ServiceProvider
          id="Default JDBC Database"
          provider-type="Connector"
          class-name="org.openejb.resource.jdbc.JdbcManagedConnectionFactory">

    # Driver class name

    JdbcDriver org.enhydra.instantdb.jdbc.idbDriver

    # Url for creating connections

    JdbcUrl jdbc:idb:conf/default.idb_database.conf

    # Default user name

    UserName Admin

    # Default password

    Password pass

  </ServiceProvider>

  <!--
  # ================================================
  # Default JCA ConnectionManager
  # ================================================
  -->
  <ServiceProvider
          id="Default Local TX ConnectionManager"
          provider-type="ConnectionManager"
          class-name="org.openejb.resource.SharedLocalConnectionManager"/>


</ServiceJar>
